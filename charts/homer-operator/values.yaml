# Default values for homer-operator

replicaCount: 1

image:
  repository: ghcr.io/rajsinghtech/homer-operator
  pullPolicy: Always
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Operator configuration
operator:
  enableGatewayAPI: false
  leaderElection:
    enabled: true
    leaseDuration: "15s"
    renewDeadline: "10s"
    retryPeriod: "2s"
  # Metrics configuration
  metrics:
    enabled: true
    # Bind address for metrics server
    bindAddress: ":8080"
    # Secure metrics serving
    secureMetrics: true
    # Kube RBAC Proxy configuration for secure metrics
    rbacProxy:
      image:
        repository: gcr.io/kubebuilder/kube-rbac-proxy
        tag: v0.15.0
        pullPolicy: Always
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 5m
          memory: 64Mi
  healthProbe:
    bindAddress: ":8081"

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# RBAC configuration
rbac:
  create: true
  annotations: {}

# Custom Resource Definition configuration
crd:
  create: true
  annotations: {}

# Namespace configuration
namespace:
  # Specifies whether a namespace should be created
  create: true
  # Name of the namespace (defaults to homer-operator if not specified)
  name: ""
  # Annotations to add to the namespace
  annotations: {}
  # Labels to add to the namespace
  labels: {}

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
      - ALL

# Service configurations
services:
  # Webhook service (main service)
  webhook:
    type: ClusterIP
    port: 8443
    annotations: {}
  # Metrics service
  metrics:
    enabled: true
    type: ClusterIP
    port: 8443
    annotations: {}

# ServiceMonitor configuration for Prometheus Operator
serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 10s
  labels: {}
  annotations: {}

resources:
  limits:
    cpu: 200m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

livenessProbe:
  httpGet:
    path: /healthz
    port: 8081
  initialDelaySeconds: 15
  periodSeconds: 20

readinessProbe:
  httpGet:
    path: /readyz
    port: 8081
  initialDelaySeconds: 5
  periodSeconds: 10

# Scheduling and placement
scheduling:
  nodeSelector: {}
  tolerations: []
  affinity: {}
  priorityClassName: ""

# Additional volumes and mounts
volumes: []
volumeMounts: []

# High availability and scaling
highAvailability:
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

# Network policy
networkPolicy:
  enabled: true
  ingress: []
  egress: []

# Environment variables
env: []
envFrom: []