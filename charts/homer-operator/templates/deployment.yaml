apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "homer-operator.managerName" . }}
  namespace: {{ include "homer-operator.namespace" . }}
  labels:
    {{- include "homer-operator.labels" . | nindent 4 }}
    control-plane: controller-manager
    app.kubernetes.io/component: manager
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.deploymentStrategy.type }}
    {{- if eq .Values.deploymentStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.deploymentStrategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.deploymentStrategy.rollingUpdate.maxSurge }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "homer-operator.selectorLabels" . | nindent 6 }}
      control-plane: controller-manager
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "homer-operator.labels" . | nindent 8 }}
        control-plane: controller-manager
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "homer-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
      - name: manager
        image: {{ include "homer-operator.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /manager
        args:
        {{- if .Values.operator.leaderElection.enabled }}
        - --leader-elect
        {{- end }}
        {{- if .Values.operator.metrics.enabled }}
        - --metrics-bind-address={{ .Values.operator.metrics.bindAddress }}
        {{- if .Values.operator.metrics.secureMetrics }}
        - --metrics-secure
        {{- end }}
        {{- end }}
        - --health-probe-bind-address={{ .Values.operator.healthProbe.bindAddress }}
        {{- if .Values.operator.enableGatewayAPI }}
        - --enable-gateway-api
        {{- end }}
        {{- $envVars := include "homer-operator.env" . }}
        {{- if $envVars }}
        env:
        {{- $envVars | nindent 8 }}
        {{- end }}
        {{- $envFromVars := include "homer-operator.envFrom" . }}
        {{- if $envFromVars }}
        envFrom:
        {{- $envFromVars | nindent 8 }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.operator.healthProbe.bindAddress | replace ":" "" | int }}
          name: health
          protocol: TCP
        {{- if .Values.operator.metrics.enabled }}
        - containerPort: {{ .Values.operator.metrics.bindAddress | replace ":" "" | int }}
          name: metrics
          protocol: TCP
        {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        {{- if .Values.startupProbe.enabled }}
        startupProbe:
          {{- toYaml .Values.startupProbe | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        {{- with .Values.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- if .Values.operator.metrics.enabled }}
      - name: kube-rbac-proxy
        image: {{ .Values.operator.metrics.rbacProxy.image.repository }}:{{ .Values.operator.metrics.rbacProxy.image.tag }}
        imagePullPolicy: {{ .Values.operator.metrics.rbacProxy.image.pullPolicy }}
        args:
        - --secure-listen-address=0.0.0.0:{{ .Values.services.metrics.port }}
        - --upstream=http://127.0.0.1:{{ .Values.operator.metrics.bindAddress | replace ":" "" }}/
        - --v=0
        ports:
        - containerPort: {{ .Values.services.metrics.port }}
          name: https
          protocol: TCP
        resources:
          {{- toYaml .Values.operator.metrics.rbacProxy.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.scheduling }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with $.Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}